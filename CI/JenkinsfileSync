pipeline {
    agent {
        label 'openshift-prg'
    }

    stages {

        stage('Set Git Config') {
            steps {
                sh 'git config --global user.email "network.performance@dhl.com"'
                sh 'git config --global user.name "ci-bot"'
                sh 'git config --global credential.helper cache'
                sh "git config --global credential.helper 'cache --timeout=3600'"
            }
        }

        stage('Sync') {
            steps {
                script {
                    // Assuming you have an SSH private key stored as a Jenkins credential
                    def sshKey = credentials('dhl-finder-ci-key')

                    // Clone the repository using the SSH private key
                    sh "GIT_SSH_COMMAND='ssh -i ${sshKey} -o StrictHostKeyChecking=no' git clone --mirror git@git.dhl.com:eCS-DHL-Finder/dcs-schema.git dcs-schema"

                    // Change directory to 'dcs-schema'
                    dir("dcs-schema") {
                        // Add a remote repository with GitHub token
                        withCredentials([string(credentialsId: 'dhlfinder-github-sync-token', variable: 'GITHUB_TOKEN')]) {
                            sh "git remote add --mirror=fetch second https://${GITHUB_TOKEN}@github.com/dhlfinder/dcs-schema.git"
                        }

                        // Update the local copy from the first repository
                        sh "GIT_SSH_COMMAND='ssh -i ${sshKey} -o StrictHostKeyChecking=no' git fetch origin --tags"

                        // Sync back the second repository
                        sh "git push second --all"
                        sh "git push second --tags"
                    }
                }
            }
        }


    }


}
